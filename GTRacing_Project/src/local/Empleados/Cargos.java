/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package local.Empleados;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import local.DAO.Cargos_DAO;
import local.DAO.Roles_DAO;
import local.PrincipalFrame.Principal_Frame;

/**
 *
 * @author Leonel
 */
public class Cargos extends javax.swing.JInternalFrame {

    //Variables Globales
    DefaultTableModel cargosView;
    Cargos_DAO carDao = new Cargos_DAO();
    int idCargo = -1;

    public Cargos() {
        //Cargonado la tabla de datos
        cargosView = new DefaultTableModel(null, getColums());
        setRows();

        //Inizializando el formulario
        initComponents();
        setVisible(true);
        
        //Cargando las accions permitidas
        accionRol();

        //Ocultando la primera columna
        jtblViewCargos.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblViewCargos.getColumnModel().getColumn(0).setMinWidth(0);
        jtblViewCargos.getColumnModel().getColumn(0).setPreferredWidth(0);

        //Centrando el formulario
        int wdith = Principal_Frame.jdpContenedor.getWidth() - this.getWidth();
        int hght = Principal_Frame.jdpContenedor.getHeight() - this.getHeight();
        this.setLocation(wdith / 2, hght / 2);
    }

    //seteando la cabecera de la tabla
    private String[] getColums() {
        String[] colums = new String[]{"Id", "Cargo", "Salario", "Descripcion"};

        return colums;
    }

    //metodo para llenar la tabla 
    private void setRows() {
        ResultSet rs = carDao.getRowsCargo();   //obteniendo los dados mediante una clase DAO
        try {
            Object[] myObject = new Object[4];

            while (rs.next()) {
                for (int i = 0; i < myObject.length; i++) {
                    myObject[i] = rs.getObject(i + 1);
                }
                cargosView.addRow(myObject);
            }

            rs.close();
            carDao.close();
        } catch (SQLException ex) {
            Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //Metodo para limpiar el formulario
    public void limpieza() {
        jtaDescripcion.setText("");
        jtfCargo.setText("");
        jtfSalario.setText("");

        for (int i = 0; i < jtblViewCargos.getRowCount(); i++) {
            cargosView.removeRow(i);
            i -= 1;
        }
    }
    
    //metodo para verificar los permisos para el formulario cargos
    private void accionRol(){
        Roles_DAO rolDao = new Roles_DAO();
        ResultSet rs = rolDao.listaTareas();
        int acciones;
        
        try {
            while(rs.next()){
                acciones = rs.getInt(1);
                switch(acciones){
                    case 1:
                        jrbtnAdd.setEnabled(true);
                        break;
                        
                    case 2:
                        jrbtnUpdate.setEnabled(true);
                        break;
                        
                    case 3:
                        jrbtnDelete.setEnabled(true);
                        break;
                }
                
                if(acciones > 3)
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**

     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgpAcciones = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jtfBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblViewCargos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfCargo = new javax.swing.JTextField();
        jtfSalario = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaDescripcion = new javax.swing.JTextArea();
        jbtnAceptar = new javax.swing.JButton();
        jPanelAcciones = new javax.swing.JPanel();
        jrbtnAdd = new javax.swing.JRadioButton();
        jrbtnUpdate = new javax.swing.JRadioButton();
        jrbtnDelete = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cargos");
        setMinimumSize(new java.awt.Dimension(500, 450));
        setPreferredSize(new java.awt.Dimension(600, 550));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Buscar:");

        jtfBusqueda.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jtfBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfBusquedaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfBusquedaKeyTyped(evt);
            }
        });

        jtblViewCargos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jtblViewCargos.setModel(cargosView);
        jtblViewCargos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblViewCargosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblViewCargos);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Cargo:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Salario:");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Descripci√≥n:");

        jtfCargo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jtfSalario.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jtfSalario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSalarioKeyTyped(evt);
            }
        });

        jtaDescripcion.setColumns(20);
        jtaDescripcion.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jtaDescripcion.setRows(5);
        jScrollPane2.setViewportView(jtaDescripcion);

        jbtnAceptar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jbtnAceptar.setText("Aceptar");
        jbtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAceptarActionPerformed(evt);
            }
        });

        jPanelAcciones.setBackground(new java.awt.Color(80, 81, 79));

        jrbtnAdd.setBackground(new java.awt.Color(80, 81, 79));
        jrbtnAdd.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnAdd.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnAdd.setText("Agregar");
        jrbtnAdd.setEnabled(false);

        jrbtnUpdate.setBackground(new java.awt.Color(80, 81, 79));
        jrbtnUpdate.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnUpdate.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnUpdate.setText("Editar");
        jrbtnUpdate.setEnabled(false);

        jrbtnDelete.setBackground(new java.awt.Color(80, 81, 79));
        jrbtnDelete.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnDelete.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnDelete.setText("Eliminar");
        jrbtnDelete.setEnabled(false);

        javax.swing.GroupLayout jPanelAccionesLayout = new javax.swing.GroupLayout(jPanelAcciones);
        jPanelAcciones.setLayout(jPanelAccionesLayout);
        jPanelAccionesLayout.setHorizontalGroup(
            jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbtnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbtnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbtnDelete)
                .addContainerGap())
        );
        jPanelAccionesLayout.setVerticalGroup(
            jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbtnAdd)
                    .addComponent(jrbtnDelete)
                    .addComponent(jrbtnUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAcciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfBusqueda))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCargo)
                            .addComponent(jtfSalario)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtfCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnAceptar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAceptarActionPerformed
        if (jrbtnAdd.isSelected()) {

            int isAdd;

            if (!jtfCargo.getText().isEmpty() && !jtfSalario.getText().isEmpty() && !jtaDescripcion.getText().isEmpty()) {
                isAdd = carDao.addCargo(jtfCargo.getText(), Double.parseDouble(jtfSalario.getText()), jtaDescripcion.getText());

                if (isAdd > 0) {
                    limpieza();
                    setRows();
                } else {
                    JOptionPane.showMessageDialog(null, "Lo senitmos no se pudieron ingresar los datos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No pueden existir campos en blanco, por favor completalos todos");
            }
        } else if (jrbtnUpdate.isSelected()) {
            int isUpdate;

            if (!jtfCargo.getText().isEmpty() && !jtfSalario.getText().isEmpty() && !jtaDescripcion.getText().isEmpty()) {
                if (idCargo > 0) {
                    isUpdate = carDao.updateCargo(idCargo, jtfCargo.getText(), Double.parseDouble(jtfSalario.getText()), jtaDescripcion.getText());

                    if (isUpdate > 0) {
                        limpieza();
                        setRows();
                        idCargo = -1;
                    } else {
                        JOptionPane.showMessageDialog(null, "Lo senitmos no se pudieron ingresar los datos");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Debes de elegin un campo de la tabla para realizar la accion");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No pueden existir campos en blanco, por favor completalos todos");
            }
        } else if (jrbtnDelete.isSelected()) {
            int isDelete;

            if (idCargo > 0) {
                isDelete = carDao.deleteCargos(idCargo);

                if (isDelete > 0) {
                    limpieza();
                    setRows();
                    idCargo = -1;
                } else {
                    JOptionPane.showMessageDialog(null, "Lo senitmos no se pudieron ingresar los datos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes de elegin un campo de la tabla para realizar la accion");
            }

        }
        carDao.close();
    }//GEN-LAST:event_jbtnAceptarActionPerformed

    private void jtfSalarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSalarioKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }
        if (evt.getKeyChar() == '.' && jtfSalario.getText().contains(".")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfSalarioKeyTyped

    private void jtblViewCargosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblViewCargosMouseClicked
        if (jrbtnDelete.isSelected() || jrbtnUpdate.isSelected()) {
            //Cargando los datos a los jTextFiel
            jtfCargo.setText((String) cargosView.getValueAt(jtblViewCargos.getSelectedRow(), 1));

            jtaDescripcion.setText((String) cargosView.getValueAt(jtblViewCargos.getSelectedRow(), 3));

            //Ingresando el id
            idCargo = (int) cargosView.getValueAt(jtblViewCargos.getSelectedRow(), 0);
        }
    }//GEN-LAST:event_jtblViewCargosMouseClicked

    private void jtfBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBusquedaKeyTyped
        
    }//GEN-LAST:event_jtfBusquedaKeyTyped

    private void jtfBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBusquedaKeyPressed
        String search = jtfBusqueda.getText();

        if (search.isEmpty()) {
            limpieza();
            setRows();
        } else {
            limpieza();
            ResultSet rs = carDao.getSearchRows(search);   //obteniendo los dados mediante una clase DAO
            try {
                Object[] myObject = new Object[4];

                while (rs.next()) {
                    for (int i = 0; i < myObject.length; i++) {
                        myObject[i] = rs.getObject(i + 1);
                    }
                    cargosView.addRow(myObject);
                }

                rs.close();
                carDao.close();
            } catch (SQLException ex) {
                Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jtfBusquedaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgpAcciones;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelAcciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAceptar;
    private javax.swing.JRadioButton jrbtnAdd;
    private javax.swing.JRadioButton jrbtnDelete;
    private javax.swing.JRadioButton jrbtnUpdate;
    private javax.swing.JTextArea jtaDescripcion;
    private javax.swing.JTable jtblViewCargos;
    private javax.swing.JTextField jtfBusqueda;
    private javax.swing.JTextField jtfCargo;
    private javax.swing.JTextField jtfSalario;
    // End of variables declaration//GEN-END:variables
}
