/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package local.Usuarios;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import local.DAO.Empleados_DAO;
import local.DAO.Roles_DAO;
import local.DAO.Usuarios_DAO;
import local.PrincipalFrame.Principal_Frame;
import local.Security.EncriptadorPassword;

/**
 *
 * @author Leonel
 */
public class Usuarios extends javax.swing.JInternalFrame {

    //Variables globales
    int idUsuario = -1;
    DefaultTableModel viewUser;
    Usuarios_DAO userDao = new Usuarios_DAO();
    Empleados_DAO empDao = new Empleados_DAO();
    Roles_DAO rolDao = new Roles_DAO();
    
    public Usuarios() {
        //Cragando el modelo de la tabla
        viewUser = new DefaultTableModel(null, getColums());
        getRows();
        
        //Iniciando los componentes del formulario
        initComponents();
        setVisible(true);
        
        //Cargando las accioes por rol
        accionRol();
        
        //Cargando los comboBox
        empDao.listaEmpleados(jcbxEmpleado);
        rolDao.listaRoles(jcbxRol);
        
        //Ocultar columnas
        jtbUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
        jtbUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
        jtbUsuarios.getColumnModel().getColumn(0).setPreferredWidth(0);

        //Centrando el formulario
        int wdith = Principal_Frame.jdpContenedor.getWidth() - this.getWidth();
        int hght = Principal_Frame.jdpContenedor.getHeight() - this.getHeight();
        this.setLocation(wdith / 2, hght / 2);
    }
    
    private String[] getColums() {
        String[] colums = new String[]{"Id", "Usuario", "Contrase単a", "Empleado", "Rol"};

        return colums;
    }

    //Metodo para obtener las filas de la tabla
    private void getRows() {
        ResultSet rs = userDao.getListUser();   //obteniendo los dados mediante una clase DAO
        try {
            Object[] myObject = new Object[5];

            while (rs.next()) {
                for (int i = 0; i < myObject.length; i++) {
                    myObject[i] = rs.getObject(i + 1);
                }
                viewUser.addRow(myObject);
            }

            rs.close();
            userDao.close();
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //Devuelbe la contrase単a ya sea encriptada o desencriptada
    private String passwdDevelop(String pwd, int ncrip){
        EncriptadorPassword encryp = new EncriptadorPassword("J@va3ncr1p73r");
        String pass = "";
        
        if(ncrip == 1){ //para encriptar
            pass = encryp.encrypt(pwd);
        } else if(ncrip == 2){ //para desencriptar
            pass = encryp.decrypt(pwd);
        }
        
        return pass;
    }
    
    //metodo para verificar los permisos para el formulario cargos
    private void accionRol(){
        ResultSet rs = rolDao.listaTareas();
        int acciones;
        try {
            while(rs.next()){
                acciones = rs.getInt(1);
                switch(acciones){
                    case 10:
                        jrbtnAdd.setEnabled(true);
                        break;
                        
                    case 11:
                        jrbtnUpdate.setEnabled(true);
                        break;
                        
                    case 12:
                        jrbtnDelete.setEnabled(true);
                        break;
                }
                
                if(acciones > 12)
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void limpiar() {
        jtfUsuario.setText("");
        jtfPass1.setText("");
        jtfPass2.setText("");
        jcbxEmpleado.setSelectedIndex(0);
        jcbxRol.setSelectedIndex(0);
    }
    
    private void limpieza() {
        limpiar();        
        for (int i = 0; i < jtbUsuarios.getRowCount(); i++) {
            viewUser.removeRow(i);
            i -= 1;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtgAcciones = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbUsuarios = new javax.swing.JTable();
        jtfBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfUsuario = new javax.swing.JTextField();
        jtfPass2 = new javax.swing.JPasswordField();
        jtfPass1 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jcbxEmpleado = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jcbxRol = new javax.swing.JComboBox<>();
        jbtnAceptar = new javax.swing.JButton();
        jPanelAcciones = new javax.swing.JPanel();
        jrbtnAdd = new javax.swing.JRadioButton();
        jrbtnUpdate = new javax.swing.JRadioButton();
        jrbtnDelete = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Usuarios");
        setToolTipText("");
        setMinimumSize(new java.awt.Dimension(500, 400));
        setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Buscar:");

        jtbUsuarios.setModel(viewUser);
        jtbUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbUsuarios);

        jtfBuscar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Usuario:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Contrase単a:");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Verificar Contrase単a:");

        jtfUsuario.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jtfPass2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jtfPass1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Empleado:");

        jcbxEmpleado.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jcbxEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..." }));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Rol");

        jcbxRol.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jcbxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..." }));

        jbtnAceptar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jbtnAceptar.setText("Aceptar");
        jbtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAceptarActionPerformed(evt);
            }
        });

        jPanelAcciones.setBackground(new java.awt.Color(80, 81, 79));

        jrbtnAdd.setBackground(new java.awt.Color(80, 81, 79));
        jbtgAcciones.add(jrbtnAdd);
        jrbtnAdd.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnAdd.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnAdd.setText("Agregar");
        jrbtnAdd.setEnabled(false);
        jrbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbtnAddActionPerformed(evt);
            }
        });

        jrbtnUpdate.setBackground(new java.awt.Color(80, 81, 79));
        jbtgAcciones.add(jrbtnUpdate);
        jrbtnUpdate.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnUpdate.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnUpdate.setText("Editar");
        jrbtnUpdate.setEnabled(false);

        jrbtnDelete.setBackground(new java.awt.Color(80, 81, 79));
        jbtgAcciones.add(jrbtnDelete);
        jrbtnDelete.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jrbtnDelete.setForeground(new java.awt.Color(242, 95, 92));
        jrbtnDelete.setText("Eliminar");
        jrbtnDelete.setEnabled(false);

        javax.swing.GroupLayout jPanelAccionesLayout = new javax.swing.GroupLayout(jPanelAcciones);
        jPanelAcciones.setLayout(jPanelAccionesLayout);
        jPanelAccionesLayout.setHorizontalGroup(
            jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbtnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbtnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbtnDelete)
                .addContainerGap())
        );
        jPanelAccionesLayout.setVerticalGroup(
            jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbtnAdd)
                    .addComponent(jrbtnDelete)
                    .addComponent(jrbtnUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAcciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(90, 90, 90)
                        .addComponent(jtfUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfPass1)
                            .addComponent(jtfPass2)
                            .addComponent(jcbxEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbxRol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jbtnAceptar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfPass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbxEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnAceptar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAceptarActionPerformed
        if(!jtfUsuario.getText().isEmpty() && jtfPass1.getPassword().length > 0 && jtfPass2.getPassword().length > 0 && jcbxEmpleado.getSelectedIndex() > 0 && jcbxRol.getSelectedIndex() > 0){
            if(jrbtnAdd.isSelected()){
                int nameAprove = userDao.userExist(jtfUsuario.getText());
                String pass1 = String.valueOf(jtfPass1.getPassword());
                String pass2 = String.valueOf(jtfPass2.getPassword());
                
                if(nameAprove == 0 && pass1.equals(pass2)){
                    pass2 = passwdDevelop(pass1, 1);
                    local.LC.Roles r = (local.LC.Roles) jcbxRol.getSelectedItem();
                    local.LC.Empleados e = (local.LC.Empleados) jcbxEmpleado.getSelectedItem();
                    
                    int rol = r.getId();
                    int emp = e.getIdempleado();
                    
                    int i = userDao.addUser(jtfUsuario.getText(), pass2, emp, rol);
                    
                    if(i > 0){
                        limpieza();
                        getRows();
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No se pudo ingresar el usuario");
                } else if(!pass1.equals(pass2)){
                    JOptionPane.showMessageDialog(null, "Las contrase単as no coinciden");
                } else if(nameAprove == 1){
                    JOptionPane.showMessageDialog(null, "El nombre de usuario ya existe");
                }
                
                idUsuario = -1;
            } else if(jrbtnUpdate.isSelected()){
                int nameAprove = userDao.userExist(jtfUsuario.getText());
                String pass1 = String.valueOf(jtfPass1.getPassword());
                String pass2 = String.valueOf(jtfPass2.getPassword());
                
                if(nameAprove == 0 && pass1.equals(pass2)){
                    pass2 = passwdDevelop(pass1, 1);
                    local.LC.Roles r = (local.LC.Roles) jcbxRol.getSelectedItem();
                    local.LC.Empleados e = (local.LC.Empleados) jcbxEmpleado.getSelectedItem();
                    
                    int rol = r.getId();
                    int emp = e.getIdempleado();
                    
                    int i = userDao.updateUser(idUsuario, jtfUsuario.getText(), pass2, emp, rol);
                    
                    if(i > 0){
                        limpieza();
                        getRows();
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No se pudo actualizar el usuario");
                } else if(!pass1.equals(pass2)){
                    JOptionPane.showMessageDialog(null, "Las contrase単as no coinciden");
                } else if(nameAprove == 1){
                    JOptionPane.showMessageDialog(null, "El nombre de usuario ya existe");
                }
                
                idUsuario = -1;
            } else if(jrbtnDelete.isSelected()){
                int i = userDao.deleteUser(idUsuario);
                
                if(i > 0){
                    limpieza();
                    getRows();
                } else{
                    JOptionPane.showMessageDialog(null, "No se puede eliminar el usuario");
                }
                
                idUsuario = -1;
            }
        } else{
            JOptionPane.showMessageDialog(null, "no dejes campos vacios por favor");
        }
        
    }//GEN-LAST:event_jbtnAceptarActionPerformed

    private void jtbUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbUsuariosMouseClicked
        if(jrbtnDelete.isSelected() || jrbtnUpdate.isSelected()){
            idUsuario = (int) viewUser.getValueAt(jtbUsuarios.getSelectedRow(), 0);
            jtfUsuario.setText((String) viewUser.getValueAt(jtbUsuarios.getSelectedRow(), 1));
            String passEncrip = (String) viewUser.getValueAt(jtbUsuarios.getSelectedRow(), 2);
            
            jtfPass1.setText(passwdDevelop(passEncrip, 2));
            jtfPass2.setText(passwdDevelop(passEncrip, 2));
            
            String rol = (String) viewUser.getValueAt(jtbUsuarios.getSelectedRow(), 4);
            String emp = (String) viewUser.getValueAt(jtbUsuarios.getSelectedRow(), 3);
            
            for (int i = 0; i < jcbxRol.getItemCount(); i++) {
                jcbxRol.setSelectedIndex(i);
                if(rol.equals(jcbxRol.getSelectedItem().toString()))
                    break;
            }
            
            for (int i = 0; i < jcbxEmpleado.getItemCount(); i++) {
                jcbxEmpleado.setSelectedIndex(i);
                if(emp.equals(jcbxEmpleado.getSelectedItem().toString()))
                    break;
            }
        }
    }//GEN-LAST:event_jtbUsuariosMouseClicked

    private void jrbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbtnAddActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jrbtnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanelAcciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup jbtgAcciones;
    private javax.swing.JButton jbtnAceptar;
    private javax.swing.JComboBox<String> jcbxEmpleado;
    private javax.swing.JComboBox<String> jcbxRol;
    private javax.swing.JRadioButton jrbtnAdd;
    private javax.swing.JRadioButton jrbtnDelete;
    private javax.swing.JRadioButton jrbtnUpdate;
    private javax.swing.JTable jtbUsuarios;
    private javax.swing.JTextField jtfBuscar;
    private javax.swing.JPasswordField jtfPass1;
    private javax.swing.JPasswordField jtfPass2;
    private javax.swing.JTextField jtfUsuario;
    // End of variables declaration//GEN-END:variables
}
